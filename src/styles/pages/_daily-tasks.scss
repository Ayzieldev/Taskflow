@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

.daily-tasks-page {
  min-height: 100vh;
  background: var(--color-background);
  padding: $spacing-xl 0;

  // When embedded in dashboard, use different styling
  .dashboard-page & {
    min-height: auto;
    background: transparent;
    padding: 0;
  }

  .container {
    max-width: $container-max-width;
    margin: 0 auto;
    padding: 0 $spacing-lg;
  }

  .page-header {
    margin-bottom: $spacing-xl;

    .back-btn {
      margin-bottom: $spacing-lg;
    }

    .header-content {
      text-align: center;

      h1 {
        font-size: $font-size-xxl;
        font-weight: $font-weight-bold;
        color: var(--color-text);
        margin-bottom: $spacing-sm;
        background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      .header-subtitle {
        font-size: $font-size-lg;
        color: var(--color-text-muted);
        margin: 0;
      }
    }

    // Hide header when embedded in dashboard
    .dashboard-page & {
      display: none;
    }
  }

  .statistics-section {
    margin-bottom: $spacing-xl;

    // Hide statistics when embedded in dashboard
    .dashboard-page & {
      display: none;
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: $spacing-lg;

      .stat-card {
        background: var(--color-surface);
        border-radius: $border-radius-lg;
        padding: $spacing-lg;
        text-align: center;
        border: 1px solid var(--color-border);
        transition: all $transition-normal;

        &:hover {
          transform: translateY(-2px);
          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .stat-number {
          font-size: $font-size-xxl;
          font-weight: $font-weight-bold;
          color: var(--color-primary);
          margin-bottom: $spacing-xs;
        }

        .stat-label {
          font-size: $font-size-sm;
          color: var(--color-text-muted);
          font-weight: $font-weight-medium;
        }
      }
    }
  }

  .tasks-section {
    .tasks-header {
      @include flex-between;
      align-items: center;
      margin-bottom: $spacing-lg;

      h2 {
        font-size: $font-size-xl;
        font-weight: $font-weight-semibold;
        color: var(--color-text);
        margin: 0;
      }
    }

    .task-form-container {
      background: var(--color-surface);
      border-radius: $border-radius-lg;
      padding: $spacing-lg;
      margin-bottom: $spacing-lg;
      border: 1px solid var(--color-border);

      .task-form {
        .form-group {
          margin-bottom: $spacing-md;

          label {
            display: block;
            font-weight: $font-weight-medium;
            color: var(--color-text);
            margin-bottom: $spacing-xs;
          }

          input, textarea {
            width: 100%;
            padding: $spacing-sm;
            border: 2px solid var(--color-border);
            border-radius: $border-radius-sm;
            background: var(--color-background);
            color: var(--color-text);
            font-size: $font-size-base;
            transition: all $transition-fast;

            &:focus {
              outline: none;
              border-color: var(--color-primary);
              box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.1);
            }

            &::placeholder {
              color: var(--color-text-muted);
            }
          }

          textarea {
            resize: vertical;
            min-height: 80px;
          }

          &.checkbox-group {
            .checkbox-label {
              @include flex-center;
              gap: $spacing-sm;
              cursor: pointer;
              font-weight: $font-weight-medium;
              color: var(--color-text);

              input[type="checkbox"] {
                width: auto;
                margin: 0;
              }

              .checkmark {
                width: 20px;
                height: 20px;
                border: 2px solid var(--color-border);
                border-radius: $border-radius-sm;
                position: relative;
                transition: all $transition-fast;

                &:after {
                  content: '';
                  position: absolute;
                  display: none;
                  left: 6px;
                  top: 2px;
                  width: 6px;
                  height: 10px;
                  border: solid white;
                  border-width: 0 2px 2px 0;
                  transform: rotate(45deg);
                }
              }

              input[type="checkbox"]:checked + .checkmark {
                background-color: var(--color-primary);
                border-color: var(--color-primary);

                &:after {
                  display: block;
                }
              }
            }
          }
        }

        .form-actions {
          @include flex-center;
          gap: $spacing-md;
          margin-top: $spacing-lg;
        }
      }
    }

    .tasks-list {
      .empty-state {
        text-align: center;
        padding: $spacing-xxl 0;

        .empty-icon {
          font-size: 4rem;
          margin-bottom: $spacing-md;
        }

        h3 {
          font-size: $font-size-xl;
          font-weight: $font-weight-semibold;
          color: var(--color-text);
          margin-bottom: $spacing-sm;
        }

        p {
          font-size: $font-size-base;
          color: var(--color-text-muted);
          margin-bottom: $spacing-lg;
        }
      }

      .task-item {
        background: var(--color-surface);
        border-radius: $border-radius-lg;
        padding: $spacing-lg;
        margin-bottom: $spacing-md;
        border: 1px solid var(--color-border);
        transition: all $transition-normal;

        &:hover {
          transform: translateY(-1px);
          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        &.completed {
          opacity: 0.7;
          background: var(--color-surface);

          .task-title {
            text-decoration: line-through;
            color: var(--color-text-muted);
          }

          .task-description {
            text-decoration: line-through;
            color: var(--color-text-muted);
          }
        }

        .task-content {
          @include flex-between;
          align-items: flex-start;
          gap: $spacing-md;

          .task-checkbox {
            @include flex-center;
            cursor: pointer;
            flex-shrink: 0;

            input[type="checkbox"] {
              width: 24px;
              height: 24px;
              margin: 0;
              cursor: pointer;
              position: relative;
              appearance: none;
              border: 2px solid var(--color-border);
              border-radius: $border-radius-sm;
              background: var(--color-background);
              transition: all $transition-fast;

              &:checked {
                background: var(--color-primary);
                border-color: var(--color-primary);

                &::after {
                  content: 'âœ“';
                  position: absolute;
                  top: 50%;
                  left: 50%;
                  transform: translate(-50%, -50%);
                  color: white;
                  font-size: 14px;
                  font-weight: bold;
                }
              }

              &:focus {
                outline: none;
                border-color: var(--color-primary);
                box-shadow: 0 0 0 3px rgba(var(--color-primary-rgb), 0.1);
              }
            }
          }

          .task-details {
            flex: 1;
            min-width: 0;

            .task-title {
              font-size: $font-size-lg;
              font-weight: $font-weight-semibold;
              color: var(--color-text);
              margin: 0 0 $spacing-xs 0;
              line-height: 1.3;
              word-break: break-word;
            }

            .task-description {
              font-size: $font-size-base;
              color: var(--color-text-muted);
              margin: 0 0 $spacing-sm 0;
              line-height: 1.4;
            }

            .task-meta {
              @include flex-center;
              gap: $spacing-md;
              flex-wrap: wrap;

              .streak-counter {
                font-size: $font-size-sm;
                font-weight: $font-weight-medium;
                color: var(--color-primary);
                background: rgba(var(--color-primary-rgb), 0.1);
                padding: $spacing-xs $spacing-sm;
                border-radius: $border-radius-sm;
              }

              .reward-note {
                font-size: $font-size-sm;
                color: var(--color-secondary);
                background: rgba(var(--color-secondary-rgb), 0.1);
                padding: $spacing-xs $spacing-sm;
                border-radius: $border-radius-sm;
              }

              .scheduled-time {
                font-size: $font-size-sm;
                color: var(--color-accent);
                background: rgba(var(--color-accent-rgb), 0.1);
                padding: $spacing-xs $spacing-sm;
                border-radius: $border-radius-sm;
              }
            }
          }

          .task-actions {
            flex-shrink: 0;
          }
        }
      }
    }
  }

  @include mobile {
    padding: $spacing-lg 0;

    .container {
      padding: 0 $spacing-md;
    }

    .page-header {
      .header-content {
        h1 {
          font-size: $font-size-xl;
        }

        .header-subtitle {
          font-size: $font-size-base;
        }
      }
    }

    .statistics-section {
      .stats-grid {
        grid-template-columns: 1fr;
        gap: $spacing-md;
      }
    }

    .tasks-section {
      .tasks-header {
        flex-direction: column;
        gap: $spacing-md;
        align-items: stretch;

        h2 {
          text-align: center;
        }
      }

      .task-item {
        .task-content {
          flex-direction: column;
          align-items: stretch;
          gap: $spacing-sm;

          .task-details {
            .task-meta {
              justify-content: flex-start;
            }
          }

          .task-actions {
            align-self: flex-end;
          }
        }
      }
    }
  }
} 